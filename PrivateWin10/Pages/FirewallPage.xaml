<UserControl x:Class="PrivateWin10.Pages.FirewallPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ribbon="clr-namespace:System.Windows.Controls.Ribbon;assembly=System.Windows.Controls.Ribbon"
             xmlns:primitives="clr-namespace:System.Windows.Controls.Ribbon.Primitives;assembly=System.Windows.Controls.Ribbon"
             xmlns:controls="clr-namespace:PrivateWin10.Controls"
             mc:Ignorable="d"
             MinHeight="400" MinWidth="800">
    <Grid Margin="48,0,0,0">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="100*"/>
        </Grid.RowDefinitions>

        <ribbon:Ribbon Grid.Row="0" Loaded="Ribbon_Loaded" Name="rbbBar" SelectedIndex="1">
            <Ribbon.QuickAccessToolBar>
                <RibbonQuickAccessToolBar />
            </Ribbon.QuickAccessToolBar>

            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu Visibility="Collapsed"/>
            </Ribbon.ApplicationMenu>

            <Ribbon.HelpPaneContent>
                <RibbonCheckBox Name="chkAll" Label="Show All" Margin="0,2,0,0" Click="chkAll_Click"/>
            </Ribbon.HelpPaneContent>

            <RibbonTab Name="rbbFilter" Header="View Filter">
                <!--RibbonGroup Header="Sort &amp; Higlight" Name="rbbSort">
                    <RibbonComboBox Name="lblSort" Label="Sort By:">
                        <RibbonGallery Name="cmbSort" SelectedValuePath="Content" MaxColumnCount="1" SelectedValue="" SelectionChanged="cmbSort_SelectionChanged">
                            <RibbonGalleryCategory>
                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </RibbonComboBox>
                    <RibbonCheckBox Name="chkNoLocal" Label="Ignore localHost" Click="ChkNoLocal_Click"/>
                    <RibbonCheckBox Name="chkNoLan" Label="Ignore LAN" Click="ChkNoLan_Click"/>
                </-->

                <!--RibbonGroup Header="View Options" Name="rbbOptions">
                    <WrapPanel Orientation="Horizontal">
                        <RibbonSplitButton Label="15m">
                            <ribbon:RibbonGallery MaxColumnCount="1">
                                <ribbon:RibbonGalleryCategory>
                                    <ribbon:RibbonGalleryItem Content="Green" Foreground="Green" />
                                    <ribbon:RibbonGalleryItem Content="Blue" Foreground="Blue" />
                                    <ribbon:RibbonGalleryItem Content="Orange" Foreground="Orange" />
                                </ribbon:RibbonGalleryCategory>
                            </ribbon:RibbonGallery>
                        </RibbonSplitButton>
                    </WrapPanel>
                </-->
                
                <RibbonGroup Header="Filter Presets" Name="rbbPresets">
                    <RibbonButton Name="btnNoFilter" Label="Clear Filters" LargeImageSource="{StaticResource Icon_NoFilter}" Click="BtnNoFilter_Click"/>
                    <RibbonComboBox Name="txtPreset" SmallImageSource="{StaticResource Icon_Filter}" SelectionBoxWidth="100" IsEditable="True" LostFocus="TxtPreset_LostFocus" PreviewKeyDown="TxtPreset_PreviewKeyDown">
                        <RibbonGallery Name="cmdPreset" SelectedValuePath="Content" MaxColumnCount="1" SelectionChanged="CmdPreset_SelectionChanged">
                            <RibbonGalleryCategory Name="cmdPresets">

                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </RibbonComboBox>
                    <RibbonButton Name="btnDelPreset"  Label="Remove Filter Preset" SmallImageSource="{StaticResource Icon_DelFilter}" Click="BtnDelPreset_Click"/>
                    <RibbonButton Name="btnAddPreset"  Label="Save Filter Preset" SmallImageSource="{StaticResource Icon_AddFilter}" Click="BtnAddPreset_Click"/>
                </RibbonGroup>

                <RibbonGroup Header="Activity Filter" Name="rbbActivity">
                    <RibbonGroup.Resources>
                        <Style TargetType="{x:Type RibbonTwoLineText}">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="MinWidth" Value="45" />
                        </Style>
                    </RibbonGroup.Resources>

                    <RibbonComboBox Name="lblRecent" Label="Activity:">
                        <RibbonGallery Name="cmbRecent" SelectedValuePath="Content" MaxColumnCount="1" SelectionChanged="OnFilter_Changed">
                            <RibbonGalleryCategory>

                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </RibbonComboBox>

                    <RibbonComboBox Name="lblSockets" Label="Sockets:">
                        <RibbonGallery Name="cmbSockets" SelectedValuePath="Content" MaxColumnCount="1" SelectionChanged="OnFilter_Changed">
                            <RibbonGalleryCategory>

                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </RibbonComboBox>

                    <RibbonComboBox Name="lblRules" Label="Rules:">
                        <RibbonGallery Name="cmbRules" SelectedValuePath="Content" MaxColumnCount="1" SelectionChanged="OnFilter_Changed">
                            <RibbonGalleryCategory>

                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </RibbonComboBox>

                </RibbonGroup>

                <RibbonGroup Header="Program Filter" Name="rbbFilters">
                    <RibbonComboBox Name="lblAccess" Label="Granted Access:" SelectionBoxWidth="135">
                        <RibbonGallery Name="cmbAccess" SelectedValuePath="Content" MaxColumnCount="1" SelectionChanged="OnFilter_Changed">
                            <RibbonGalleryCategory>

                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </RibbonComboBox>
                    <WrapPanel Orientation="Horizontal">
                        <TextBlock Name="lblTypes" Text="Types:" Margin="5,0,10,0"></TextBlock>
                        <RibbonCheckBox Name="chkProgs" Label="Programs" IsThreeState="false" Checked="OnFilter_Changed" Indeterminate="OnFilter_Changed" Unchecked="OnFilter_Changed"/>
                        <RibbonCheckBox Name="chkApps" Label="Apps" IsThreeState="false" Checked="OnFilter_Changed" Indeterminate="OnFilter_Changed" Unchecked="OnFilter_Changed"/>
                        <RibbonCheckBox Name="chkSys" Label="System" IsThreeState="false" Checked="OnFilter_Changed" Indeterminate="OnFilter_Changed" Unchecked="OnFilter_Changed"/>
                    </WrapPanel>
                    <RibbonTextBox Name="txtFilter" Margin="0,0,0,0" SmallImageSource="{StaticResource Icon_Search}" Text="" TextBoxWidth="220" TextChanged="OnFilter_Changed"></RibbonTextBox>
                </RibbonGroup>

                <RibbonGroup Header="Category Filter" Name="rbbCaegories" LargeImageSource="{StaticResource Icon_Filter2}">
                    <primitives:RibbonMenuItemsPanel Margin="0,-0,0,-0">
                        <RibbonGallery Width="400">
                            <RibbonGalleryCategory Name="catFilter">

                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </primitives:RibbonMenuItemsPanel>
                </RibbonGroup>
            </RibbonTab>

            <RibbonTab Header="Programs" Name="rbbProgs">
                <RibbonGroup Header="Program Set">
                    <RibbonButton Name="btnAdd" Label="Add" LargeImageSource="{StaticResource Icon_Plus}" Click="btnAdd_Click"/>
                    <RibbonButton Name="btnMerge" Label="Merge" SmallImageSource="{StaticResource Icon_Merge}" Click="btnMerge_Click"/>
                    <RibbonButton Name="btnRemove" Label="Remove" SmallImageSource="{StaticResource Icon_Remove}" Click="btnRemove_Click"/>
                </RibbonGroup>

                <RibbonGroup Header="Cleanup">
                    <RibbonSplitButton Name="btnCleanup" Label="Missing Programs" SmallImageSource="{StaticResource Icon_CleanUp}" Click="btnCleanup_Click" >
                        <RibbonMenuItem Header="Extended Cleanup" Click="btnCleanupEx_Click"/>
                    </RibbonSplitButton>

                    <RibbonButton Name="btnClearLog" Label="Clear Firewall Log" SmallImageSource="{StaticResource Icon_Erase}" Click="btnClearLog_Click"/>
                </RibbonGroup>
            </RibbonTab>

            <RibbonTab Header="Rules" Name="rbbRules">
                <RibbonGroup Header="Rules" Name="rbbRule">
                    <RibbonButton Name="btnCreateRule" Label="Create Rule" LargeImageSource="{StaticResource Icon_Plus}"/>
                    <RibbonButton Name="btnReload" Label="Reload Rules" SmallImageSource="{StaticResource Icon_Refresh}"/>
                    <RibbonButton Name="btnCleanUp" Label="Clean up Rules" SmallImageSource="{StaticResource Icon_CleanUp}"/>
                </RibbonGroup>
                <RibbonGroup Header="Sellected Rules" Name="rbbRuleEdit">
                    <RibbonButton Name="btnEditRule" Label="Edit Rule" LargeImageSource="{StaticResource Icon_EditL}"/>
                    <RibbonButton Name="btnEnableRule" Label="Enable Rules" SmallImageSource="{StaticResource Icon_Enable}"/>
                    <RibbonButton Name="btnDisableRule" Label="Disable Rules" SmallImageSource="{StaticResource Icon_Disable}"/>
                    <RibbonButton Name="btnRemoveRule" Label="Remove Rules" SmallImageSource="{StaticResource Icon_Remove}"/>
                    <RibbonButton Name="btnBlockRule" Label="Set Blocking" SmallImageSource="{StaticResource Icon_Deny}"/>
                    <RibbonButton Name="btnAllowRule" Label="Set Allowing" SmallImageSource="{StaticResource Icon_Check}"/>
                    <RibbonButton Name="btnCloneRule" Label="Duplicate Rule" SmallImageSource="{StaticResource Icon_Clone}"/>
                </RibbonGroup>
                <RibbonGroup Header="Rule Guard" Name="rbbRuleGuard">
                    <RibbonSplitButton Name="btnApprove" Label="Approve Current" SmallImageSource="{StaticResource Icon_Approve}" >
                        <RibbonMenuItem Header="Approve All"/>
                    </RibbonSplitButton>
                    <RibbonSplitButton Name="btnRestore" Label="Restore Original" SmallImageSource="{StaticResource Icon_Undo}" >
                        <RibbonMenuItem Header="Restore All"/>
                    </RibbonSplitButton>
                    <RibbonSplitButton Name="btnApply" Label="Redo Changes" SmallImageSource="{StaticResource Icon_Redo}" >
                        <RibbonMenuItem Header="Restore All"/>
                    </RibbonSplitButton>
                </RibbonGroup>
            </RibbonTab>

        </ribbon:Ribbon>

        <Grid Grid.Row="1" Margin="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Name="progsCol" Width="50*" MinWidth="300" MaxWidth="1000"/>
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="50*"/>
            </Grid.ColumnDefinitions>

            <Grid Margin="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="100*"/>
                </Grid.RowDefinitions>

                <ToolBar Grid.Row="0">
                    <Label Name="lblSort" Content="Sort:" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Margin="8,0,0,0" VerticalAlignment="Center" Width="Auto" Grid.Column="0"/>
                    <Grid Margin="2,2">
                        <ComboBox Name="cmbSort" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Center" Background="White" MinWidth ="100" Width="Auto" SelectionChanged="cmbSort_SelectionChanged"/>
                    </Grid>
                    
                    <Separator/>

                    <ToggleButton Name="chkNoLan" Click="ChkNoLan_Click" ToolTip="Ignore LAN">
                        <Image Width="16" Height="16">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=chkNoLan, Path=IsChecked}" Value="true">
                                            <Setter Property="Source" Value="{StaticResource Icon_NoLan2}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=chkNoLan, Path=IsChecked}" Value="false">
                                            <Setter Property="Source" Value="{StaticResource Icon_NoLan}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </ToggleButton>

                    <ToggleButton Name="chkNoLocal" Click="ChkNoLocal_Click" ToolTip="Ignore LocalHost" IsChecked="true">
                        <Image Width="16" Height="16">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=chkNoLocal, Path=IsChecked}" Value="true">
                                            <Setter Property="Source" Value="{StaticResource Icon_NoLocal2}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=chkNoLocal, Path=IsChecked}" Value="false">
                                            <Setter Property="Source" Value="{StaticResource Icon_NoLocal}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </ToggleButton>
                </ToolBar>

                <!--WrapPanel Grid.Row="0" Orientation="Horizontal">
                    <Button Name="btnAdd" Margin="2,2" Content="Add Program" Click="btnAdd_Click"/>
                    <Button Name="btnMerge" Margin="2,2" Content="Merge Programs" Click="btnMerge_Click"/>
                    <Button Name="btnRemove" Margin="2,2" Content="Remove Program(s)" Click="btnRemove_Click"/>
                    <Button Name="btnCleanup" Margin="2,2" Content="Cleanup List" Click="btnCleanup_Click"/>
                    <CheckBox Name="chkNoLocal" Content="Ignore localHost" VerticalAlignment="Center" IsChecked="True"/>
                </-->

                <!--WrapPanel Grid.Row="1" Orientation="Horizontal">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Name="lblSort" Content="Sort:" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Margin="8,0,0,0" VerticalAlignment="Center" Width="Auto" Grid.Column="0"/>
                        <ComboBox Name="cmbSort" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Center" MinWidth ="100" Width="Auto"  Grid.Column="1" 
                                  SelectionChanged="cmbSort_SelectionChanged"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Name="lblType" Content="Type" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Margin="8,0,0,0" VerticalAlignment="Center" Width="Auto" Grid.Column="0"/>
                        <ComboBox Name="cmbFilter" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Center" MinWidth ="100" Width="Auto"  Grid.Column="1" 
                                  IsEditable="True"
                                  Height="25"
                                  SelectionChanged="cmbFilter_SelectionChanged" DropDownClosed="cmbFilter_DropDownClosed" TextBoxBase.TextChanged="cmbFilter_TextChanged" DropDownOpened="cmbFilter_DropDownOpened">
                            <ComboBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"/>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ComboBox.GroupStyle>
                            <!-ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Content}"/>
                                </DataTemplate>
                            </->
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="ComboBox">
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Visibility="{Binding IsCheckVisible}" IsChecked="{Binding IsSelected}" IsThreeState="True" Width="20" VerticalAlignment="Center" Click="cmbFilter_CheckClicked" />
                                        <TextBlock Text="{Binding Content}" VerticalAlignment="Center" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Name="lblFilter" Content="Filter" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Margin="8,0,0,0" VerticalAlignment="Center" Width="Auto" Grid.Column="0"/>
                        <TextBox Name="txtFilter" HorizontalAlignment="Left" Height="23" Margin="0,2,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" MinWidth ="150" Width="Auto" Grid.Column="1" TextChanged="txtFilter_TextChanged">
                            <!-TextBox.Style>
                                <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                                    <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />
                                    <Style.Triggers>
                                        <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                            <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                                            <Setter Property="Controls:TextBoxHelper.Watermark" Value="Enter Filter..." />
                                        </Trigger>
                                        <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                            <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </->
                        </TextBox>
                    </Grid>

                </-->

                <ScrollViewer Name="processScroll" Grid.Row="2" Margin="0,0,0,0" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightGray">
                    <Grid Margin="0,2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Name="processGrid">

                    </Grid>
                </ScrollViewer>
                <!--controls:ProgramList x:Name="programList" Grid.Row="2" Margin="0,0,0,0" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" /-->
            </Grid>


            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

            <!--ScrollViewer Grid.Column="2" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"-->
            <Grid Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="300">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Name="rulesRow" Height="*" MinHeight="200"/>
                    <RowDefinition Height="5" />
                    <RowDefinition Height="*" MinHeight="100"/>
                </Grid.RowDefinitions>

                <Grid Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!--Grid Grid.Column="0">
                        <WrapPanel Orientation="Horizontal">
                            <Button Name="btnReload" Margin="2,2" Content="Reload Rules" Click="btnReload_Click"/>
                            <CheckBox Name="chkAll" Content="Show All" Grid.Row="1" VerticalAlignment="Top" Margin="3,3,0,0" Click="chkAll_Click"/>
                        </WrapPanel>
                    </-->

                    <!--Grid Grid.Column="1">
                        <Grid Grid.Row="1" VerticalAlignment="Stretch"  Margin="10,10,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="150"/>
                            </Grid.ColumnDefinitions>

                            <GroupBox Header="Program Modules" Grid.Column="0">
                            <DataGrid x:Name="progGrid" AutoGenerateColumns="False" IsReadOnly="true" HorizontalScrollBarVisibility="Visible" MouseDoubleClick="progGrid_MouseDoubleClick" GridLinesVisibility="All">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                        <Image Grid.Column="0" Margin="2,0,2,0" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Icon}" />
                                                    </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                                    <DataGridTextColumn Header="Program" Binding="{Binding Program}" />
                                </DataGrid.Columns>
                            </DataGrid>
                            </GroupBox>

                            <Expander Grid.Column="1" IsExpanded="True" Header="View Options" Margin="2,0,2,0">
                                <StackPanel>
                                    <Label Margin="2,2,2,2" Content="Filter Modules" HorizontalAlignment="Stretch" Height="28" VerticalAlignment="Top"/>
                                    <TextBox Margin="2,2,2,2" Name="txtIDFilter" HorizontalAlignment="Stretch" Height="24" VerticalAlignment="Top" TextWrapping="Wrap" Text="" TextChanged="txtIDFilter_TextChanged" >
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                                                <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />
                                                <Style.Triggers>
                                                    <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                                                        <Setter Property="Controls:TextBoxHelper.Watermark" Value="Enter Filter..." />
                                                    </Trigger>
                                                    <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>
                            </Expander>
                            
                        </Grid>
                    </-->
                </Grid>

                <!--GroupBox Name="grpRules" Header="Firewall Rules" Grid.Row="1">
                    <controls:FirewallRuleList x:Name="ruleList" Margin="-2,-2" VerticalAlignment="Stretch"/>
                </-->
                <controls:FirewallRuleList x:Name="ruleList" Grid.Row="1" VerticalAlignment="Stretch"/>

                <GridSplitter ResizeDirection="Rows" Grid.Row="2"  Width="Auto" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

                <TabControl Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TabItem Header="Open Sockets">
                        <controls:NetworkSocketList x:Name="sockList" VerticalAlignment="Stretch"/>
                    </TabItem>
                    <TabItem Name="logTab" Header="Connection Log">
                        <controls:FirewallLogList x:Name="consList" VerticalAlignment="Stretch"/>
                    </TabItem>
                    <TabItem Header="Dns Log">
                        <controls:DnsLogList x:Name="dnsList" VerticalAlignment="Stretch"/>
                    </TabItem>
                </TabControl>
            </Grid>
            <!--/-->

        </Grid>
    </Grid>
</UserControl>
